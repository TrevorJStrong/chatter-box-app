// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  style={
    {
      "alignSelf": "center",
      "flex": 1,
      "justifyContent": "center",
      "width": "90%",
    }
  }
>
  <View
    accessibilityState={
      {
        "busy": undefined,
        "checked": undefined,
        "disabled": undefined,
        "expanded": undefined,
        "selected": undefined,
      }
    }
    accessibilityValue={
      {
        "max": undefined,
        "min": undefined,
        "now": undefined,
        "text": undefined,
      }
    }
    accessible={true}
    collapsable={false}
    focusable={true}
    onBlur={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
  >
    <View
      style={
        [
          {
            "opacity": 1,
            "transform": [
              {
                "scale": 1,
              },
            ],
          },
          {
            "backgroundColor": "#3498db",
            "borderRadius": 5,
            "padding": 10,
          },
        ]
      }
    >
      <Text
        style={
          [
            {
              "textAlign": "left",
            },
            {
              "color": "rgba(28, 27, 31, 1)",
              "writingDirection": "ltr",
            },
            [
              {
                "fontFamily": "System",
                "fontSize": 14,
                "fontWeight": "500",
                "letterSpacing": 0.1,
                "lineHeight": 20,
              },
              {
                "color": "#fff",
                "textAlign": "center",
              },
            ],
          ]
        }
      >
        Create New Post
      </Text>
    </View>
  </View>
  <RCTScrollView
    ListEmptyComponent={
      <Text
        style={
          {
            "fontSize": 18,
            "marginTop": 20,
            "textAlign": "center",
          }
        }
      >
        No posts available
      </Text>
    }
    contentContainerStyle={
      {
        "paddingBottom": 80,
        "paddingTop": 10,
      }
    }
    contentInsetAdjustmentBehavior="automatic"
    getItem={[Function]}
    getItemCount={[Function]}
    keyExtractor={[Function]}
    keyboardDismissMode="on-drag"
    onContentSizeChange={[Function]}
    onLayout={[Function]}
    onMomentumScrollBegin={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
      />
    }
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={0.0001}
    showsVerticalScrollIndicator={false}
    stickyHeaderIndices={[]}
    viewabilityConfigCallbackPairs={[]}
  >
    <RCTRefreshControl />
    <View>
      <Text
        onLayout={[Function]}
        style={
          {
            "fontSize": 18,
            "marginTop": 20,
            "textAlign": "center",
          }
        }
      >
        No posts available
      </Text>
    </View>
  </RCTScrollView>
  <View
    collapsable={false}
    jestAnimatedStyle={
      {
        "value": {
          "opacity": 0,
        },
      }
    }
    style={
      {
        "bottom": 100,
        "opacity": 0,
        "position": "absolute",
        "right": 20,
      }
    }
  >
    <View
      collapsable={false}
      style={
        {
          "backgroundColor": "#f1c40f",
          "borderRadius": 20,
          "shadowColor": "#000",
          "shadowOffset": {
            "height": 0,
            "width": 0,
          },
          "shadowOpacity": 0,
          "shadowRadius": 0,
        }
      }
      testID="button-container-outer-layer"
    >
      <View
        collapsable={false}
        style={
          {
            "backgroundColor": "#f1c40f",
            "borderColor": "transparent",
            "borderRadius": 20,
            "borderStyle": "solid",
            "borderWidth": 0,
            "flex": undefined,
            "minWidth": 64,
            "shadowColor": "#000",
            "shadowOffset": {
              "height": 0,
              "width": 0,
            },
            "shadowOpacity": 0,
            "shadowRadius": 0,
          }
        }
        testID="button-container"
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            {
              "busy": undefined,
              "checked": undefined,
              "disabled": false,
              "expanded": undefined,
              "selected": undefined,
            }
          }
          accessibilityValue={
            {
              "max": undefined,
              "min": undefined,
              "now": undefined,
              "text": undefined,
            }
          }
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            [
              {
                "overflow": "hidden",
              },
              {
                "borderRadius": 20,
              },
            ]
          }
          testID="button"
        >
          <View
            style={
              [
                {
                  "alignItems": "center",
                  "flexDirection": "row",
                  "justifyContent": "center",
                },
                undefined,
              ]
            }
          >
            <View
              style={
                [
                  {
                    "marginLeft": 12,
                    "marginRight": -4,
                  },
                  {
                    "marginLeft": 16,
                    "marginRight": -16,
                  },
                  false,
                ]
              }
              testID="button-icon-container"
            >
              <Text />
            </View>
            <Text
              numberOfLines={1}
              selectable={false}
              style={
                [
                  {
                    "textAlign": "left",
                  },
                  {
                    "color": "rgba(28, 27, 31, 1)",
                    "writingDirection": "ltr",
                  },
                  [
                    {
                      "fontFamily": "System",
                      "fontSize": 14,
                      "fontWeight": "500",
                      "letterSpacing": 0.1,
                      "lineHeight": 20,
                    },
                    [
                      {
                        "marginHorizontal": 16,
                        "marginVertical": 9,
                        "textAlign": "center",
                      },
                      false,
                      {
                        "marginHorizontal": 24,
                        "marginVertical": 10,
                      },
                      undefined,
                      false,
                      {
                        "color": "rgba(255, 255, 255, 1)",
                        "fontFamily": "System",
                        "fontSize": 14,
                        "fontWeight": "500",
                        "letterSpacing": 0.1,
                        "lineHeight": 20,
                      },
                      undefined,
                    ],
                  ],
                ]
              }
              testID="button-text"
            >
              Back to top
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
